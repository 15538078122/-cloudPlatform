spring:
  cloud:
    nacos:
      config:
#        server-addr: 192.168.3.78:8848
        server-addr: 127.0.0.1:8848
        file-extension: yaml
        group:  DEFAULT_GROUP
      discovery:
#        server-addr: 192.168.3.78:8848
        server-addr: 127.0.0.1:8848
        service: microsys      #authentication service
seata:
  enabled: true
  application-id: ${spring.application.name}
  tx-service-group: usercenter_tx_group    #此处配置自定义的seata事务分组名称,为了映射到不同的seata server； service.vgroupMapping.usercenter_tx_group=default   service.default.grouplist=127.0.0.1:8091
  config:
    type: nacos
    nacos:
#      serverAddr: 192.168.3.78:8848
      serverAddr: 127.0.0.1:8848
      group: SEATA_GROUP

ribbon:
  eager-load:
    enabled: true
    clients: auserver
  NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobinRule
  ConnectTimeout: 2000 #请求连接超时时间
  ReadTimeout: 2000 #默认请求处理的超时时间
  OkToRetryOnAllOperations: false #对所有请求都进行重试
  MaxAutoRetriesNextServer: 2 #切换实例的重试次数
  MaxAutoRetries: 2 #对当前实例的重试次数
feign:
  hystrix:
    enabled: true
auserver:
  ribbon:
    #    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule #配置规则 随机
    #    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobinRule #配置规则 轮询
    #    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RetryRule #配置规则 重试
    #    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.WeightedResponseTimeRule #配置规则 响应时间权重
    #    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.BestAvailableRule #配置规则 最空闲连接策略
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobinRule
    ConnectTimeout: 5000 #请求连接超时时间
    ReadTimeout: 5000 #请求处理的超时时间
    OkToRetryOnAllOperations: false #对所有请求都进行重试
    MaxAutoRetriesNextServer: 2 #切换实例的重试次数
    MaxAutoRetries: 1 #对当前实例的重试次数
hystrix:
  command:
    "default":  #default全局有效，service id指定应用有效
      execution:
        timeout:
          #是否开启超时熔断
          enabled: true
        isolation:
          thread:
            timeoutInMilliseconds: 12000 #断路器超时时间，默认1000ms
          strategy: SEMAPHORE
    "AuthFeignService#auth(String,String,String,String,String)":  #default全局有效，service id指定应用有效
      execution:
        timeout:
          #是否开启超时熔断
          enabled: true
        isolation:
          thread:
            timeoutInMilliseconds: 12000 #断路器超时时间，默认1000ms
    "UserCenterFeignService#Add(String,String,String)":  #default全局有效，service id指定应用有效
      execution:
        timeout:
          #是否开启超时熔断
          enabled: true
        isolation:
          thread:
            timeoutInMilliseconds: 12000 #断路器超时时间，默认1000ms
